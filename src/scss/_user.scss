:root {
  --blue: rgb(0, 119, 181);
  --orange: rgb(230, 133, 35);
  --white: rgb(255, 255, 255);
  --purple: #6610f2;
  --ngreen: #8be835;
}
body {
  font-family: system-ui;
  color: white;
}

@keyframes background-pan {
  from {
    background-position: 0% center;
  }

  to {
    background-position: -200% center;
  }
}

@keyframes scale {
  from,
  to {
    transform: scale(0);
  }

  50% {
    transform: scale(1);
  }
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(180deg);
  }
}

a > .magic {
  display: inline-block;
  position: relative;
}

a > .magic > .magic-logo {
  --size: clamp(20px, 1.5vw, 30px);

  animation: scale 700ms ease forwards;
  display: block;
  height: var(--size);
  left: var(--logo-left);
  position: absolute;
  top: var(--logo-top);
  width: var(--size);
}

a > .magic > .magic-logo > svg {
  animation: rotate 1000ms linear infinite;
  display: block;
  opacity: 0.7;
}

a > .magic > .magic-logo > svg > path {
  fill: var(--blue);
}

a > .magic > .magic-text {
  animation: background-pan 3s linear infinite;
  background: linear-gradient(to right, var(--blue), var(--orange), var(--white), var(--blue));
  background-size: 200%;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  white-space: nowrap;
}

a > .magic > .magic-text-2 {
  animation: background-pan 3s linear infinite;
  background: linear-gradient(to right, var(--blue), var(--purple), var(--ngreen), var(--blue));
  background-size: 200%;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  white-space: nowrap;
}

//munch

#infinite-scroll {
  overflow-y: scroll;
  height: 400px; // Set a fixed height for the scrollable area
  // Add styles for the scrollable subheader h2
}

// Media query for dynamic scaling
@media (max-width: 768px) {
  #infinite-scroll {
    height: auto;
  }
}

// Card Animations...
.card-groups,
.card-group,
.card {
  aspect-ratio: 5 / 7;
}

.card-groups,
.card-group,
.big-card {
  width: 50vmin;
}
.equal-1-1 {
  width: 100px;
  height: 100px;
  background-size: cover;
  background-position: center;
}

.card-group {
  position: absolute;
  transition: transform 400ms ease;
}

.card-group[data-status="unknown"] {
  transform: scale(0);
  transition: none;
}

.card-group[data-status="active"] {
  transition-delay: 300ms;
}

.card-group[data-status="after"] {
  transform: translateX(50%) scale(0);
}

.card-group[data-status="before"] {
  transform: translateX(-50%) scale(0);
}

.card-group[data-status="becoming-active-from-after"] {
  transform: translateX(50%) scale(0);
  transition: none;
}

.card-group[data-status="becoming-active-from-before"] {
  transform: translateX(-50%) scale(0);
  transition: none;
}

.card {
  background-color: rgba(255, 255, 255, 0.05);
  position: absolute;
  transition: transform 1000ms cubic-bezier(0.05, 0.33, 0.15, 0.85);

  background-position: center;
  background-size: cover;
}

.big-card {
  border-radius: 5vmin;
}

.big-card:nth-child(1) {
  transform: translateX(-10%) rotate(-1deg);
}

.big-card:nth-child(2) {
  transform: rotate(2deg);
}

.big-card:nth-child(3) {
  transform: translateX(-6%) rotate(-3deg);
}

.big-card:nth-child(4) {
  transform: translate(10%, 3%) rotate(4deg);
}

.card-group:hover > .card {
  box-shadow: -2vmin 2vmin 3vmin rgba(0, 0, 0, 0.4);
}

.card-group:hover > .big-card:nth-child(1) {
  transform: translate(-105%, 18%) rotate(-20deg);
}

.card-group:hover > .big-card:nth-child(2) {
  transform: translate(-35%, 8%) rotate(-8deg);
}

.card-group:hover > .big-card:nth-child(3) {
  transform: translate(35%, 8%) rotate(8deg);
}

.card-group:hover > .big-card:nth-child(4) {
  transform: translate(105%, 18%) rotate(20deg);
}
/*
.card-swiper-buttons {
  margin-top: 8vmin;
  display: flex;
  justify-content: space-around;
  padding: 0vmin 4vmin;
}

.card-swiper-buttons > button {
  font-size: 2.5vmin;
  border: 0.4vmin solid rgb(200, 200, 200);
  border-radius: 100%;
  color: white;
  background-color: transparent;
  height: 7vmin;
  width: 7vmin;
  display: grid;
  place-items: center;
  cursor: pointer;
}

#love-button {
  color: rgb(33, 150, 243);
  border-color: rgb(33, 150, 243);
}
*/
